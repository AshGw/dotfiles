#!/bin/bash

# prerequisites
source_or_dot() {
  if command -v source &> /dev/null; then
    source "$1"
  else
    . "$1"
  fi
}

# nix setup
 # xz is needed for nix doe
if ! command -v xz &> /dev/null; then
  if [ -f "/etc/debian_version" ]; then
    echo "xz not found. Installing xz-utils on Debian..."
    sudo apt update && sudo apt -y install xz-utils
  else
    echo "xz not found, and you are not on Debian. Exiting."
    exit 1
  fi
fi

sh <(curl -L https://nixos.org/nix/install) --no-daemon
source_or_dot ~/.nix-profile/etc/profile.d/nix.sh

echo "installing packages.."
# chad packages installation
nix-env -iA nixpkgs.git \
    nixpkgs.curl \
    nixpkgs.wget \
    nixpkgs.zsh \
    nixpkgs.neovim \
    nixpkgs.tmux \
    nixpkgs.bat \
    nixpkgs.neofetch \
    nixpkgs.tree \
    nixpkgs.htop \
    nixpkgs.fd \
    nixpkgs.xclip \
    nixpkgs.polybar \
    nixpkgs.feh \
    nixpkgs.man \
    nixpkgs.i3 \
    nixpkgs.picom \
    nixpkgs.pango \
    nixpkgs.ripgrep \
    nixpkgs.direnv \
    nixpkgs.librewolf \
    nixpkgs.chromium \
    nixpkgs.docker \
    nixpkgs.docker-compose \
    nixpkgs.kubectl \
    nixpkgs.virtualbox \
    nixpkgs.wireshark \
    nixpkgs.nmap \
    nixpkgs.pandoc \
    nixpkgs.zathura \
    nixpkgs.tor \
    nixpkgs.tor-browser


# tmux plugin manager
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm


# dircolors
curl https://raw.githubusercontent.com/seebi/dircolors-solarized/master/dircolors.ansi-dark --output ~/.dircolors


# zsh setup

sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" <<< $'\n'


rm -rf ~/.zshrc
sh -c "$(curl -fsLS chezmoi.io/get)" -- init --apply ashgw

mkdir ~/.config ~/.ssh ~/.config/nvim ~/.config/zathura ~/.config/neofetch ~/.config/picom ~/.config/polybar ~/.config/i3 

# dotfiles mapping
declare -A dotfiles=(
  [".zshrc"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.zshrc"
  [".dircolors"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.dircolors"
  [".bashrc"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.bashrc"
  [".nanorc"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.nanorc"
  [".tmux.conf"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.tmux.conf"
  [".gitconfig"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.gitconfig"
  [".hushlogin"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.hushlogin"
  [".config/nvim/init.vim"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.config/nvim/init.vim"
  [".config/zathura/zathurarc"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.config/zathura/zathurarc"
  [".config/i3/config"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.config/i3/config"
  [".config/polybar/colors.ini"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.config/polybar/colors.ini"
  [".config/polybar/config.ini"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.config/polybar/config.ini"
  [".config/polybar/launch.sh"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.config/polybar/launch.sh"
  [".config/polybar/uptime.sh"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.config/polybar/uptime.sh"
  [".config/neofetch/config.conf"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.config/neofetch/config.conf"
  [".config/picom/picom.conf"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.config/picom/picom.conf"
  [".ssh/_gh_gen.sh"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.ssh/_gh_gen.sh"
  [".ssh/config"]="https://raw.githubusercontent.com/AshGw/dotfiles/main/.ssh/config"

)

for file in "${!dotfiles[@]}"; do
  curl -o "$HOME/$file" "${dotfiles[$file]}"
done

# zsh final confs
  echo '#Nix' >> ~/.zshrc
  echo '. ~/.nix-profile/etc/profile.d/nix.sh' >> ~/.zshrc


  # sourcing
  zsh
  source_or_dot ~/.zshrc

echo -e "\e[1;32mBootstrapping is complete!\e[0m"

##############################################
#### now for the extra shit 

read -p "Do you want to install all the arbitrary dev packages? (y/n): " ans

if [ "$ans" == "y" ]; then
    echo -e "\e[1;32mInstalling pnpm...\e[0m"
    bash <(curl -L https://raw.githubusercontent.com/AshGw/dotfiles/main/install/arbitrary/pnpm)
    echo -e "\e[1;32mpnpm installation done!\e[0m"

    echo -e "\e[1;32mInstalling conda...\e[0m"
    bash <(curl -L https://raw.githubusercontent.com/AshGw/dotfiles/main/install/arbitrary/conda)
    echo -e "\e[1;32mconda installation done!\e[0m"

    echo -e "\e[1;32mInstalling poetry...\e[0m"
    bash <(curl -L https://raw.githubusercontent.com/AshGw/dotfiles/main/install/arbitrary/poetry)
    echo -e "\e[1;32mpoetry installation done!\e[0m"

    echo -e "\e[1;32mInstalling node...\e[0m"
    bash <(curl -L https://raw.githubusercontent.com/AshGw/dotfiles/main/install/arbitrary/node)
    echo -e "\e[1;32mnode installation done!\e[0m"

    echo -e "\e[1;32mInstalling go...\e[0m"
    bash <(curl -L https://raw.githubusercontent.com/AshGw/dotfiles/main/install/arbitrary/go)
    echo -e "\e[1;32mgo installation done!\e[0m"

    echo -e "\e[1;32mInstalling rust...\e[0m"
    bash <(curl -L https://raw.githubusercontent.com/AshGw/dotfiles/main/install/arbitrary/rust)
    echo -e "\e[1;32mrust installation done!\e[0m"

    echo -e "\e[1;32mInstallation of arbitrary dev packages completed.\e[0m"
else
    echo "Skipping installation of arbitrary dev packages."
fi










